extends ../public/index.pug

block header
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', href='stylesheets/main.css')
    script(src='scripts/main.js')
    link(rel='stylesheet', href='stylesheets/olympSelection.css')
    script(src='/scripts/olympSelection.js')
    title #{title}

block main
    article
        section.olympCategories
            .cat-nav
                ul
                    li
                        img(src='images/arch.png', name='arch', onclick="catSelect('arch')")
                    li
                        img(src='images/prog.png', name='prog', onclick="catSelect('prog')", style='box-shadow:15px 15px 0 -14px white,-15px -15px 0 -14px white;')
                    li
                        img(src='images/weld.png', name='weld', onclick="catSelect('weld')")
                    li
                        img(src='images/mech.png', name='mech', onclick="catSelect('mech')")
                    li
                        img(src='images/office.png', name='office', onclick="catSelect('office')")
                    li
                        img(src='images/art.png', name='art', onclick="catSelect('art')")
                    li
                        a(href='/olympList/create')
                            img(src='images/AddOlymp.png', alt='')
            #arch.cat-kit(style='display: none;')
                .cat-head
                    img(src='images/arch.png', alt='')
                    h1 Архитектура
                .cat-description
                    p
                        | Профессия архитектора предполагает архитектурное проектирование на профессиональном уровне. В обязанности специалиста входят организация архитектурной среды, проектирование зданий и разработка объемно-планировочных и архитектурных решений.
            #prog.cat-kit(style='display: block;')
                .cat-head
                    img(src='images/prog.png', alt='')
                    h1 Программирование
                .cat-description
                    p
                        | Программист – это специалист, создающий исходный код для программы. Такой программой может быть операционная система компьютера, видеоигра, web или мобильное приложение и даже алгоритм работы микроволновки. Программный код пишется на специальном языке программирования. Он состоит из обычных слов и некоторых специальных символов. Сегодня насчитывается несколько сотен языков программирования, но самые распространенные из них – Java, Python, PHP, C#, JavaScript, C, С++, Objective-C, Swift. Какой язык программирования выбрать, программист решает сам в зависимости от конкретной задачи (сделать игру, приложение для web или программу для сервера) и собственных знаний. Квалифицированный программист уверенно использует 2-4 языка.
            #weld.cat-kit(style='display: none;')
                .cat-head
                    img(src='images/weld.png', alt='')
                    h1 Сварка
                .cat-description
                    p
                        | Сварщик – рабочая специальность и предусматривает работу на сварочном производстве. Специалист занимается соединением металлических конструкций, деталей, изделий, ёмкостей и трубопроводов разного вида, состава, предназначения и уровня сложности. От профессионального сварщика зависит качество работы и сварочных швов. В его работе не допускаются ошибки, которые могут привести к катастрофическим последствиям. Профессия сварщика подразделяется на несколько специальностей: газосварщик, сварщик ручной дуговой сварки, оператор автоматических сварочных аппаратов.
            #mech.cat-kit(style='display: none;')
                .cat-head
                    img(src='images/mech.png', alt='')
                    h1 Механика
                .cat-description
                    p
                        | В скоростной век автомобилей без профессии автомеханика не обойтись. Кто как не он найдёт причину неисправности и устранит её. В автосервисах такой специалист может выполнять самые различные виды работ. В настоящее время автомобильные организации занимаются как устранением небольшой неисправности автомобиля и косметическим ремонтом, так и полным восстановлением разбитой машины.
            #office.cat-kit(style='display: none;')
                .cat-head
                    img(src='images/office.png', alt='')
                    h1 Офисное ПО
                .cat-description
                    p
                        | Офисное программное обеспечение представляет собой комплекс программных продуктов для создания и эффективного использования прикладной среды, решения широкого спектра задач по работе с информацией, хранением, обработкой и обменом данными, автоматизации рабочих процессов, учета и управления. Способно функционировать только на базе предустановленной операционной системы, а, возможно, и других системных программных продуктов.
            #art.cat-kit(style='display: none;')
                .cat-head
                    img(src='images/art.png', alt='')
                    h1 Графическое ПО
                .cat-description
                    p
                        | Программное обеспечение, позволяющее создавать, редактировать или просматривать графические файлы. Компьютерную графику можно разделить на три категории — растровая графика, векторная графика и трёхмерная графика. Многие графические программы предназначены для обработки только векторного изображения или только растра, но существуют и программы, сочетающие оба типа. Достаточно просто преобразовать векторное изображение в растр, обратная задача является достаточно сложной, но существуют программы и для этого (т. н. векторизаторы). Программы для работы с трёхмерной графикой могут использовать как векторные (например, для построения сложных объектов), так и растровые (например, в качестве текстур) изображения.
        section#OlympListRaw.olympSelect
            h4#nothingMassage Олимпиад не найденно
            script.

                //Новый вывод
                // \/ Рабочая зона \/
                // С сервера прилетает olymp - массив массивов, тоесть он похож на [[/**/],[/**/],[/**/]]
                // В нем есть поля section, title, except, description
                // Все работай, чтобы вывод был как раньше и лучше
                // /\ Рабочая зона /\

                // Здесь происходит загрузка с сервера данных, и сразу парситься в нормальный массив, Ибо сначала приходить дичь несусветная. Можешь потрогать, но лучше не стоит.
                let raw = "<%=categories%>".split(',');
                const categories = [];
                for (const val of raw)
                categories.push(val)
                raw = "<%=Name_olymp.office%>".split(',');
                if(raw[0] !== ''){
                for (const item of raw)
                name_olymp.office.push(item)
                }
                raw = "<%=Name_olymp.programming%>".split(',');
                if(raw[0] !== ''){
                for (const item of raw)
                name_olymp.programming.push(item)
                }
                raw = "<%=Name_olymp.architecture%>".split(',');
                if(raw[0] !== ''){
                for (const item of raw)
                name_olymp.architecture.push(item)
                }
                raw = "<%=Name_olymp.mechanic%>".split(',');
                if(raw[0] !== ''){
                for (const item of raw)
                name_olymp.mechanic.push(item)
                }
                raw = "<%=Name_olymp.graphics%>".split(',');
                if(raw[0] !== ''){
                for (const item of raw)
                name_olymp.graphics.push(item)
                }
                raw = "<%=Name_olymp.svarka%>".split(',');
                if(raw[0] !== ''){
                for (const item of raw)
                name_olymp.svarka.push(item)
                }
                // Начиная с этого места, можешь писать и переписывать как хочешь. Тут просто вывод в блоки до тех пор пока были необработанные данные. И да, вот ссылка на то что есть в бд localhost:3000/db
                window.olymps = name_olymp;
                /*
                                     /^--^\\     /^--^\     /^--^\
                                     \\____/     \____/     \____/
                                    /      \\   /      \   /      \
                                    |        | |        | |        |
                                    \\__  __/   \__  __/   \__  __/
                |^|^|^|^|^|^|^|^|^|^|^|^\\ \^|^|^|^/ /^|^|^|^|^\ \^|^|^|^|^|^|^|^|^|^|^|^|
                | | | | | | | | | | | | |\\ \| | |/ /| | | | | | \ \ | | | | | | | | | | |
                ########################/ /######\\ \###########/ /#######################
                | | | | | | | | | | | | \\/| | | | \/| | | | | |\/ | | | | | | | | | | | |
                |_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|
                */
                function catPlay(catName){
                let olympName;
                let olympDesc;
                let olympURL;
                //чистим старые олимпиады
                let olymps = document.getElementsByClassName('olymp');
                for(i = 0; i < olymps.length; i++){
                olymps[i].remove();
                }
                //Лёгкий фикс кек
                olymps = document.getElementsByClassName('olymp');
                for(i = 0; i < olymps.length; i++){
                olymps[i].remove();
                }
                if(translateMeow(catName) !== undefined){
                if(translateMeow(catName).length > 0){
                document.getElementById('nothingMassage').style.display = 'none';
                for (let i = 0; i < translateMeow(catName).length; i++) {
                //тут добавление вот этого вот
                olympName = `${translateMeow(catName)[i]}`;
                olympName = beautifulMeow(olympName);
                olympDesc = `Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem architecto cupiditate eaque aliquid dolore blanditiis laborum dolores iusto, rerum quo voluptatum id aspernatur dolorem deserunt soluta rem laboriosam illo totam!`
                olympURL = `/walk/${translateMeow(catName)[i]}`;
                catBallOfWool(olympName, olympDesc,olympURL)
                }
                }else{
                document.getElementById('nothingMassage').style.display = 'block';
                }
                }else{
                document.getElementById('nothingMassage').style.display = 'block';
                }
                }
                catPlay('prog')
                // а остальное в js
