extends ../public/index

block header
    //-link(rel='stylesheet', href='../stylesheets/olympWalkthrough.css')
    link(href='https://fonts.googleapis.com/css?family=Pacifico|Roboto+Condensed:300,300i,400,700&display=swap&subset=cyrillic', rel='stylesheet')
    //-script(src='../scripts/olympWalkthrough.js')
    link(rel="stylesheet", href="../stylesheets/bootstrap/bootstrap.min.css")
    title #{title}
    link(rel="stylesheet", href="../stylesheets/olympWalkthroughDELUXE.css")

block main
    article
        section.olymp-head
            img(src='/images/ico.png', alt='')
            h1 #{olymp.title}
        form(action="/result" method="post")
            input(type="hidden", name="olympID", value=olymp.id)
            .olymp-flex
                section.olymp-body
                    each item in dataParse
                        .card
                            .card-header
                                p #{item.id}
                            .card-body
                                .card-header
                                    if item.f
                                        iframe(src="../code/" + item.f + ".txt", frameborder="1", width="100%", height="auto")
                                    p #{item.description}
                                .card-body
                                    if item.type == "checkbox"
                                        each val in item.answer.split(";")
                                            .input-group.mb-3
                                              .input-group-prepend
                                                .input-group-text
                                                  input(type="checkbox", name="answer_"+item.id)
                                              p.form-control #{val}
                                    else if item.type == "textbox"
                                        input(type="text", name="answer_"+item.id)
                                    else if item.type == "radio"
                                        each val in item.answer.split(";")
                                            .input-group
                                              .input-group-prepend
                                                .input-group-text
                                                  input(type="radio", name="answer_"+item.id)
                                              p.form-control #{val}

                section.olymp-nav
                    .buttons
                        button(type="submit") Завершить
        script.
            //TODO: Создание вот тут вот
            //не ругайся на меня плез если чтото не так, просто напиши что не так или что переделать я исправлю
            //имя и иконка олимпиады
            //generateHead('Имя олимпиады', 'Тута котегория');
            //ща напишу функцию на перевод твоих в мои (чтобы не париться лишний раз)
            //UPD: вот translateCat('name')
            //я вставил её в функцию => если ты напишешь generateHead('Имя олимпиады', 'programming'); то категория будет программирование
            /*создание вопросов функцией:
            generateQuest('Вопрос строкой', 'Тип вопроса (radio,checkbox,textbox)', 'Тип опционального контента(nothing,image,code)', 'опциональный контент', 'ответы в виде массива');
            При типе вопроса textbox в ответы пиши '', тк не знаю как сделать чтоб скипалось :с
            UPD: раньше функция просила правильные ответы, но я тут понял что не использую их, хотя при генерации и не должен наверное
            */
            /* опциональный контент:
            если nothing в 'опциональный контент' пиши что угодно или '' (хз как сделать чтобы скипало вот это вот если ничего не пишешь)
            если image пишешь url (тип "/image/..../папка/файл.имг")
            если code то просто строчку с кодом или хз как могу поменять
            */
            /*
            <%
            const query_pool = data;
            %>
            //ПРИМЕР ГИНЕРАЦИИ
            // generateQuest(quest, type, optType , code, answersTest);
            generateHead('<%=name_olymp%>', '<%=category%>');
            let pr = null;
            <%
            for (const item of query_pool) {
            %>
            pr = `<%=item.answers%>`.split(';');
            if (pr.length > 3) pr.pop()
            generateQuest('<%=item.description%>',
            '<%=item.type%>',
            '<%=item.opt_mode%>',
            `<%=item.f%>`,
            pr);
            <%}%>
            */
            // quest = 'Норм сделал?'
            // type = 'checkbox'
            // optType = 'nothing'
            // answersTest = ['Нет', 'Никита, ты дцп', 'Не очень', 'Ужасно', 'Очень плохо', 'Просто разрыв жепы от этого', 'Никита очень плохой человек'];
            // generateQuest(quest, type, optType , '', answersTest);
            // quest = 'Мне грустно'
            // type = 'textbox'
            // optType = 'image'
            // let img = '/images/sad.jpg'
            // generateQuest(quest, type, optType , img, '');